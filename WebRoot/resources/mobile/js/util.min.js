(function(b) {
    Array.prototype.indexOf = function(b) {
        for (var a = 0; a < this.length; a++) if (this[a] == b) return a;
        return - 1
    };
    Array.prototype.remove = function(b) {
        b = this.indexOf(b); - 1 < b && this.splice(b, 1)
    };
    b.extend(!0, b, {
        simpleBox: function(c, a) {
            a = a || 2E3;
            var d = b(".simple_block");
            d.html(c).show().animate({
                opacity: 1
            },
            300);
            setTimeout(function() {
                d.animate({
                    opacity: 0
                },
                300,
                function() {
                    d.hide()
                })
            },
            a)
        },
        dialogBox: function(c, a, d, k) {
            var g = b(".m_block"),
            n = g.find(".m_content"),
            m = g.find("a.m_cancel"),
            f = "",
            q = g.find("a.m_ok"),
            e = g.find("a.m_ok_2"),
            h = function() {
                m.off();
                e.off();
                q.off();
                g.hide();
                b(".f_mask").hide();
                k && k()
            };
            d ? e.hide().siblings("a").show() : e.show().siblings("a").hide();
            a && 0 < a.length && (f += "<p>" + a + "</p>");
            n.empty().append(f + c);
            g.show();
            b(".f_mask").show();
            m.on("click", h);
            e.on("click", h);
            q.on("click",
            function() {
                h();
                d && d()
            })
        },
        ajaxOpt: function(c, a, d, k, g) {
            a = b.extend({
                sid: sid,
                action: {
                    append_prds: "add_product",
                    get_color_size: "get_color_size",
                    delete_items: "remove_items",
                    update_gift: "add_gift",
                    delete_gift: "remove_gift",
                    update_number: "cart_update_quantity",
                    add_to_wishlist: "add_to_wishlist"
                } [c]
            },
            a);
            b(".loading").css({
                display: "block"
            });
            b.ajax({
                url: "cart.php",
                type: "GET",
                data: a,
                dataType: "json",
                success: function(a) {
                    b(".loading").css({
                        display: "none"
                    });
                    0 == a.errorCode ? (d && d(a, k), setTimeout(function() {
                        "append_prds" == c && location.reload()
                    },
                    300)) : (b.simpleBox(a.errorMsg), setTimeout(g, 300))
                },
                error: function(a, c) {
                    b(".loading").css({
                        display: "none"
                    })
                }
            })
        },
        isEmpty: function(b) {
            return void 0 == b || null == b || "" == b ? !0 : !1
        },
        pop: function(c) { ({
                wrap: null,
                mask: null,
                text: "",
                complete: null,
                determine: null,
                ok: null,
                cancel: null,
                determine_name: "",
                ok_name: "",
                cancel_name: "",
                speed: 0,
                type: "",
                popup: function(a) {
                    if (!a.text) return ! 1;
                    this.wrap = a.wrap ? b(a.wrap) : b(".popup");
                    this.mask = a.mask ? b(a.mask) : b(".mask");
                    this.text = a.text;
                    this.complete = "function" === typeof a.complete ? a.complete: null;
                    this.determine = "function" === typeof a.determine ? a.determine: null;
                    this.ok = "function" === typeof a.ok ? a.ok: null;
                    this.cancel = "function" === typeof a.cancel ? a.cancel: null;
                    this.determine_name = a.determine_name ? a.determine_name: "\u786e\u5b9a";
                    this.ok_name = a.ok_name ? a.ok_name: "\u786e\u5b9a";
                    this.cancel_name = a.cancel_name ? a.cancel_name: "\u53d6\u6d88";
                    this.speed = "number" === typeof a.speed && 0 < typeof a.speed ? a.speed: 2E3;
                    if (a.type) switch (a.type.toLowerCase()) {
                    case "pop":
                        this.type = "Pop";
                        break;
                    case "confirm":
                        this.type = "Confirm";
                        break;
                    default:
                        this.type = "Alert"
                    } else this.type = "Alert";
                    this.mask.css("display", "none");
                    this.wrap.css("display", "none");
                    this.wrap.removeClass("Pop Alert Confirm");
                    this.wrap.addClass(this.type).find(".info").html(this.text);
                    this.wrap.find(".title").css("display", "none");
                    this.wrap.find(".determine").off("click").css("display", "none");
                    this.wrap.find(".ok").off("click").css("display", "none");
                    this.wrap.find(".cancel").off("click").css("display", "none");
                    "Pop" === this.type ? this.openPop() : "Confirm" === this.type ? this.openConfirm() : this.openAlert();
                    this.wrap.css({
                        width: window.innerWidth + "px",
                        height: window.innerHeight + "px",
                        display: "block"
                    })
                },
                openPop: function() {
                    var a = this;
                    setTimeout(function() {
                        a.wrap.css("display", "none");
                        a.complete && a.complete()
                    },
                    a.speed)
                },
                openConfirm: function() {
                    var a = this;
                    a.mask.css("display", "block");
                    a.mask.css("display", "block");
                    a.wrap.find(".ok").css("display", "block");
                    a.wrap.find(".cancel").css("display", "block");
                    a.wrap.find(".ok").on("click",
                    function() {
                        a.mask.css("display", "none");
                        a.wrap.css("display", "none");
                        a.ok && a.ok();
                        a.complete && a.complete()
                    });
                    a.wrap.find(".cancel").on("click",
                    function() {
                        a.mask.css("display", "none");
                        a.wrap.css("display", "none");
                        a.cancel && a.cancel();
                        a.complete && a.complete()
                    })
                },
                openAlert: function() {
                    var a = this;
                    a.mask.css("display", "block");
                    a.wrap.find(".title").css("display", "block");
                    a.wrap.find(".determine").css("display", "block");
                    a.wrap.find(".determine em").html(a.determine_name);
                    a.wrap.find(".determine").on("click",
                    function() {
                        a.mask.css("display", "none");
                        a.wrap.css("display", "none");
                        a.determine && a.determine();
                        a.complete && a.complete()
                    })
                }
            }).popup(c)
        }
    });
    b.fn.initBlockSize = function(c) {
        var a = 0,
        d = b(window).height(),
        k = b(this).find("p").eq(0).height() || 0,
        g = b(this).find(".f_foot").height() || 0,
        n = b(this).find(".f_content");
        n[0] && (c ? (0 < c.indexOf("rem") && (a = 20 * parseFloat(c)), 0 < c.indexOf("px") && (a = parseFloat(c)), 0 < c.indexOf("%") && (a = parseFloat(c) * d / 100)) : a = b(this).height(), n.height(a - k - g + "px"))
    };
    b.fn.slideUp = function(c) {
        c = c || "80%";
        var a = parseInt(b(this).attr("direction")),
        d = {};
        b(".f_mask").show();
        0 === a ? d.height = c: (d.width = c, c = "100%");
        b(this).initBlockSize(c);
        b(this).animate(d, 300)
    };
    b.fn.slideDown = function(c) {
        var a = {};
        0 === parseInt(b(this).attr("direction")) ? a.height = 0 : a.width = 0;
        b(this).animate(a, 200,
        function() { ! c && b(".f_mask").hide()
        })
    };
    b.fn.initSelectList = function(c, a) {
        var d = b(this),
        k = d.find(".select_box"),
        g = d.find("ul.sel_list"),
        n = d.find("a.c_btn"),
        m = d.find("a.c_close"),
        f = {
            init: function() {
                this.c_val = [];
                this.c_val.push(a.pid);
                this.jsonData = this.parseData();
                this.render();
                this.colorSizeInit();
                g.on("click", "a.f_del", this.delItem);
                n.on("click", this.sumbitColorSize);
                m.on("click", this.closeBox);
                b(".f_mask").on("click", this.closeBox)
            },
            addProduct: function(a) {
                if (a && 0 > f.c_val.indexOf(a)) {
                    var e = g.find("li").eq(0);
                    g.prepend(e.clone());
                    f.c_val.push(a);
                    f.showDelBtn();
                    f.setValue(a)
                }
                b(".sel_attrs span.on").removeClass("on");
                b(".sel_attrs span").removeClass("stockout")
            },
            colorSizeInit: function() {
                var a = d.find(".sel_attrs.color_options"),
                e = d.find(".sel_attrs.size_options"),
                h = a.find("span").length,
                l = e.find("span").length,
                p = a.find("span.on").html(),
                k = e.find("span.on").html();
                1 == h && (p = a.find("span").html());
                1 == l && (k = e.find("span").html());
                if (1 <= a.find("span").length) a.find("span").on("click",
                function() {
                    b(this).addClass("on").siblings().removeClass("on");
                    b(this).removeClass("stockout").siblings().removeClass("stockout");
                    p = b(this).html();
                    var a = c.attr1_array[p];
                    e.find("span").length ? (e.find("span").each(function() {
                        b(this).removeClass("stockout");
                        0 > b.inArray(b(this).html(), a) && (b(this).hasClass("on") && b(this).removeClass("on"), b(this).addClass("stockout"))
                    }), 0 < e.find("span.on").length && (selected_item = _.findWhere(c.product, {
                        color: p,
                        size: k
                    }), f.addProduct(selected_item.itemid))) : (selected_item = _.findWhere(c.product, {
                        color: p
                    }), f.addProduct(selected_item.itemid))
                });
                if (1 <= e.find("span").length) e.find("span").on("click",
                function() {
                    b(this).addClass("on").siblings().removeClass("on");
                    b(this).removeClass("stockout").siblings().removeClass("stockout");
                    k = b(this).html();
                    var e = c.attr2_array[k];
                    a.find("span").length ? (a.find("span").each(function() {
                        b(this).removeClass("stockout");
                        0 > b.inArray(b(this).html(), e) && (b(this).hasClass("on") && b(this).removeClass("on"), b(this).addClass("stockout"))
                    }), 0 < a.find("span.on").length && (selected_item = _.findWhere(c.product, {
                        color: p,
                        size: k
                    }), f.addProduct(selected_item.itemid))) : (selected_item = _.findWhere(c.product, {
                        color: p
                    }), f.addProduct(selected_item.itemid))
                })
            },
            closeBox: function() {
                d.slideDown();
                g.find("li").each(function(a) {
                    0 < a && b(this).empty().remove()
                });
                k.off();
                g.off();
                n.off();
                b(".f_mask").off()
            },
            sumbitColorSize: function() {
                f.closeBox();
                var c = f.c_val;
                if (0 > c.indexOf(a.pid)) {
                    var e = {};
                    e.sid = sid;
                    e.action = "remove_items";
                    e.batch_ids = a.batch_id ? a.batch_id: "";
                    e.item_ids = a.batch_id ? "": a.itemId;
                    b(".loading").css({
                        display: "block"
                    });
                    b.ajax({
                        url: "cart.php",
                        type: "GET",
                        data: e,
                        dataType: "json",
                        success: function(a) {
                            a = {};
                            for (var e = 0,
                            h = c.length; e < h; e++) c[e] += ".1";
                            a.product_ids = c.join(",");
                            b.ajaxOpt("append_prds", a)
                        }
                    })
                } else if (c.remove(a.pid), 0 < c.length) {
                    for (var e = {},
                    h = 0,
                    l = c.length; h < l; h++) c[h] += ".1";
                    e.product_ids = c.join(",");
                    b.ajaxOpt("append_prds", e)
                }
            },
            showDelBtn: function() {
                1 < g.find("li").length ? b("a.f_del").css({
                    display: "inline"
                }) : b("a.f_del").css({
                    display: "none"
                })
            },
            delItem: function() {
                var a = b(this).closest("li");
                a.empty().remove();
                f.c_val.remove(a.attr("item_id"));
                f.showDelBtn()
            },
            setAttrs: function() {
                if (1 == c.attr_count) {
                    var a = f.jsonData;
                    d.find(".sel_attrs").eq(0).find("span").each(function() {
                        var e = b(this).text(),
                        c = b(this);
                        if (b.isEmpty(a[e])) for (var l = 0; l < a[""].length; l++) e == a[""][l].color && c.attr("item_id", a[""][l].itemid);
                        else c.attr("item_id", a[e][0].itemid)
                    })
                }
            },
            setValue: function(a) {
                for (var b = c.product,
                k = b.length,
                l = "\u5df2\u9009\uff1a",
                d = 0; d < k; d++) if (a == b[d].itemid) {
                    var f = g.find("li").eq(0);
                    f.attr("item_id", a);
                    f.find("img").attr("src", b[d].image);
                    f.find("p.prd_price").text("\uffe5" + b[d].salePrice);
                    b[d].color && b[d].size && (l += b[d].color + " " + b[d].size);
                    b[d].size && b[d].color || (l += b[d].size || b[d].color);
                    f.find("p.prd_tit").text(l)
                }
            },
            parseData: function() {
                for (var a = c.product,
                b = a.length,
                d = {},
                k = "\u989c\u8272" == c.attr1_name ? "color": "size", f = 0; f < b; f++) {
                    var g = a[f][k];
                    d[g] || (d[g] = []);
                    d[g].push(a[f])
                }
                return d
            },
            render: function() {
                for (var d = [], e = 0; e < c.attr_count; e++) {
                    var h = "attr" + (e + 1);
                    0 == e ? d.push('<div class="f_select"><div class="select_top"><p>', "\u989c\u8272", '</p></div><div class="sel_attrs color_options">', "</div></div>") : 1 == e && d.push('<div class="f_select"><div class="select_top"><p>', "\u5c3a\u7801", '</p></div><div class="sel_attrs size_options">', "</div></div>");
                    for (var l = 0,
                    g = c[h].length; l < g; l++) d.splice( - 1, 0, "<span>" + c[h][l] + "</span>")
                }
                k.empty().append(d.join(""));
                b("a.f_del").css({
                    display: "none"
                });
                f.setAttrs();
                f.setValue(a.pid)
            }
        };
        f.init()
    };
    b.fn.keyBoard = function(c, a) {
        var d = b(this).find(".jp_show").find("div"),
        k = this,
        g = b(this).find("a.c_close"),
        n = b(this).find("a.c_ok"),
        m = d.eq(1).find("input"),
        f = d.eq(0),
        q = d.eq(2),
        e = b(k).not("a"),
        h = {
            init: function() {
                m.val(c).focus();
                this.canScroll = this.over = 0;
                this.scrollEvent();
                b("footer.total_result").hide();
                e.on("click", this.getFocus);
                f.on("click", this.lessNumber);
                q.on("click", this.addNumber);
                g.on("click", this.cancelPnael);
                n.on("click", this.overPanel);
                m.on("blur", this.overFocus)
            },
            scrollEvent: function() {
                document.addEventListener("touchmove",
                function(a) {
                    0 === h.canScroll && (a.preventDefault(), a.stopPropagation())
                },
                !1)
            },
            getFocus: function() {
                m.focus()
            },
            overFocus: function() {
                setTimeout(function() {
                    "input" !== document.activeElement.tagName.toLowerCase() && 0 === h.over && h.cancelPnael()
                },
                300)
            },
            cancelPnael: function() {
                var a = 0 === h.getValue() ? !0 : !1;
                b(k).slideDown(a);
                h.over = 1;
                h.canScroll = 1;
                b("footer.total_result").show();
                e.off();
                f.off();
                q.off();
                g.off();
                n.off();
                m.off()
            },
            overPanel: function() {
                var b = h.getValue();
                h.cancelPnael();
                if (isNaN(b)) return ! 1;
                a(b)
            },
            lessNumber: function() {
                var a = h.getValue();
                0 < a && (a--, m.val(a));
                return ! 0
            },
            addNumber: function() {
                var a = h.getValue();
                a++;
                m.val(a)
            },
            getValue: function() {
                return parseInt(m.val())
            }
        };
        h.init()
    };
    b(function() {
        FastClick.attach(document.body);
        var b = 0 <= navigator.userAgent.indexOf("Windows Phone"),
        a = /iP(ad|hone|od)/.test(navigator.userAgent) && !b,
        d = 0 < navigator.userAgent.indexOf("Android") && !b;
        FastClick.prototype.needsFocus = function(a) {
            switch (a.nodeName.toLowerCase()) {
            case "textarea":
                return ! 0;
            case "select":
                return ! d;
            case "input":
                switch (a.type) {
                case "button":
                case "checkbox":
                case "file":
                case "image":
                case "radio":
                case "submit":
                    return ! 1
                }
                return ! a.disabled && !a.readOnly && 0 == a.value.length;
            default:
                return /\bneedsfocus\b/.test(a.className)
            }
        };
        FastClick.prototype.needsClick = function(b) {
            switch (b.nodeName.toLowerCase()) {
            case "button":
            case "select":
            case "textarea":
                if (b.disabled) return ! 0;
                break;
            case "input":
                if (a && "file" === b.type || b.disabled || /\bfocusPositionInit\b/.test(b.className) && "number" === b.type && 0 < b.value.length) return ! 0;
                break;
            case "label":
            case "iframe":
            case "video":
                return ! 0
            }
            return /\bneedsclick\b/.test(b.className)
        }
    })
})(Zepto);