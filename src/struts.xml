<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN" "http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>

	<!-- 是否显示详细错误信息 -->
	<constant name="struts.devMode" value="true" />
	<!-- 国际化资源文件名称 -->
	<constant name="struts.custom.i18n.resources" value="i18n" />
	<!-- 是否自动加载国际化资源文件  -->
	<constant name="struts.i18n.reload" value="false" />
	<!-- convention类重新加载 -->
	<constant name="struts.convention.classes.reload" value="false" />
	<!-- 浏览器是否缓存静态内容 -->
	<constant name="struts.serve.static.browserCache" value="true" />
	<!-- 配置使用Spring管理Action -->
	<constant name="struts.objectFactory" value="spring" />
	<!-- 上传文件大小限制设置 -->
	<constant name="struts.multipart.maxSize" value="-1" />

	<!-- 主题 -->
	<constant name="struts.ui.theme" value="simple" />
	<!-- 编码 -->
	<constant name="struts.i18n.encoding" value="UTF-8" />
	<!-- 后缀 -->
	<constant name="struts.action.extension" value="action" />

	<!-- 结果资源的路径 -->
	<constant name="struts.convention.result.path" value="/WEB-INF/pages/" />
	<!-- URL资源分隔符 -->
	<constant name="struts.convention.action.name.separator" value="_" />
	<!-- 允许 OGNL 调用 java 方法 -->  
	<constant name="struts.enable.DynamicMethodInvocation" value="true" />  
	  
	<!-- 允许 OGNL 调用静态 java 方法 -->  
	<constant name="struts.ognl.allowStaticMethodAccess" value="true" /> 
	<package name="basePackage" extends="json-default">
		<interceptors>
			<!-- 自定义异常拦截器 -->
			<interceptor name="exceptionInterceptor" class="com.jshop.common.ExceptionInterceptor"></interceptor>
			<interceptor-stack name="baseStack">
                <interceptor-ref name="exception" />
                <interceptor-ref name="alias" />
                <interceptor-ref name="servletConfig" />
                <interceptor-ref name="i18n" />
                <interceptor-ref name="prepare" />
                <interceptor-ref name="chain" />
                <interceptor-ref name="debugging" />
                <interceptor-ref name="scopedModelDriven" />
                <interceptor-ref name="modelDriven" />
                <interceptor-ref name="fileUpload" />
                <interceptor-ref name="checkbox" />
                <interceptor-ref name="multiselect" />
                <interceptor-ref name="staticParams" />
                <interceptor-ref name="actionMappingParams" />
                <interceptor-ref name="params">
					<param name="excludeParams">dojo\..*,^struts\..*</param>
                </interceptor-ref>
                <interceptor-ref name="conversionError"/>
                <!-- 配置方法级别的校验 -->
                <interceptor-ref name="validation">
                    <param name="excludeMethods">input,back,cancel,browse</param>
                    <param name="validateAnnotatedMethodOnly">true</param>
                </interceptor-ref>
                <interceptor-ref name="workflow">
                    <param name="excludeMethods">input,back,cancel,browse</param>
                </interceptor-ref>
                <interceptor-ref name="exceptionInterceptor" />
            </interceptor-stack>
		</interceptors>

		<!-- 配置默认拦截器栈 -->
		<default-interceptor-ref name="baseStack" />

		<!-- 未到找Action指向页面 -->
		<default-action-ref name="errorPage" />

		<action name="errorPage">
			<result type="redirect">/html/error_page_404.html</result>
		</action>
	</package>
	
	<!-- 后台package -->
	<package name="web" extends="basePackage" namespace="/web/">
		<interceptors>
			<interceptor name="loginInterceptor" class="com.jshop.common.LoginInterceptor"></interceptor>
			<interceptor-stack name="adminStack">
				<interceptor-ref name="loginInterceptor">
					<param name="excludeMethods">login</param>
				</interceptor-ref>
				<interceptor-ref name="baseStack" />
			</interceptor-stack>
		</interceptors>
		
		<!-- 配置默认拦截器栈 -->
		<default-interceptor-ref name="adminStack"/> 
		
		<global-results>
			<result name="error" type="json">
				<param name="includeProperties">
					success,msg,errorMsg
                </param>
				<param name="ignoreHierarchy">false</param>
			</result>
			<result name="login">/WEB-INF/pages/web/login/login.jsp</result>
			<result name="main" type="redirect">/web/common/main.action</result>
			
			<result name="json" type="json">
				<!-- root参数用于指定要序列化的根对象，如果省去这一配置，表示要序列化action中的所有属性 --> 
                <!-- <param name="root">list</param> --> 
                <!-- ignoreHierarchy 为false时表示要序列化根对象的所有基类 --> 
                <param name="ignoreHierarchy">false</param> 
                <!-- 排除hello属性，使其不被序列化 --> 
                <param name="excludeProperties">
                	actionErrors,actionMessages,errorMessages,errors,fieldErrors
                	,callbackurl,locale,texts
                	,session,request,response,application
                </param>
			</result>
		</global-results>
		
		
		<global-exception-mappings>
	    	<exception-mapping result="error" exception="java.lang.Exception,java.sql.SQLException">
	     	</exception-mapping>
	    </global-exception-mappings>
	</package>
	
	<!-- app package -->
	<package name="app" extends="basePackage" namespace="/app/">
		<interceptors>
			<interceptor name="appInterceptor" class="com.jshop.common.AppInterceptor"></interceptor>
			<interceptor-stack name="adminStack">
				<interceptor-ref name="appInterceptor"></interceptor-ref>
				<interceptor-ref name="baseStack" />
			</interceptor-stack>
		</interceptors>
		
		<!-- 配置默认拦截器栈 -->
		<default-interceptor-ref name="adminStack"/> 
		
		<global-results>
			<result name="error" type="json">
				<param name="includeProperties">
					success,msg,errorMsg
                </param>
				<param name="ignoreHierarchy">false</param>
			</result>
			<!-- 
			<result name="success">/WEB-INF/pages/admin/success.jsp</result>
			<result name="login">/WEB-INF/pages/admin/admin_login.jsp</result>
			 -->
			<result name="json" type="json">
				<!-- root参数用于指定要序列化的根对象，如果省去这一配置，表示要序列化action中的所有属性 --> 
                <!-- <param name="root">list</param> --> 
                <!-- ignoreHierarchy 为false时表示要序列化根对象的所有基类 --> 
                <param name="ignoreHierarchy">false</param> 
                <!-- 排除hello属性，使其不被序列化 --> 
                <param name="excludeProperties">
                	actionErrors,actionMessages,errorMessages,errors,fieldErrors
                	,callbackurl,locale,texts
                	,session,request,response,application
                </param>
			</result>
		</global-results>
		
		
		<global-exception-mappings>
	    	<exception-mapping result="error" exception="java.lang.Exception,java.sql.SQLException">
	     	</exception-mapping>
	    </global-exception-mappings>
	</package>
	<!-- PC商城 package -->
	<package name="pc" extends="basePackage" namespace="/pc/">
		<interceptors>
			<interceptor name="loginInterceptor" class="com.jshop.common.PCInterceptor"></interceptor>
			<interceptor-stack name="adminStack">
				<interceptor-ref name="loginInterceptor">
					<param name="excludeMethods">login</param>
				</interceptor-ref>
				<interceptor-ref name="baseStack" />
			</interceptor-stack>
		</interceptors>
		
		<default-interceptor-ref name="adminStack"/> 
		
		<global-results>
			<result name="error" type="json">
				<param name="includeProperties">
					success,msg,errorMsg
                </param>
				<param name="ignoreHierarchy">false</param>
			</result>
			<!-- 
			<result name="success">/WEB-INF/pages/admin/success.jsp</result> -->
			<result name="login" type="freemarker">/WEB-INF/pages/pc/login/login.ftl</result>
			<result name="toLogin" type="redirect">/pc/login/login.action</result>
			<result name="main" type="redirect">/pc/index.action</result>
			
			<result name="json" type="json">
				<!-- root参数用于指定要序列化的根对象，如果省去这一配置，表示要序列化action中的所有属性 --> 
                <!-- <param name="root">list</param> --> 
                <!-- ignoreHierarchy 为false时表示要序列化根对象的所有基类 --> 
                <param name="ignoreHierarchy">false</param> 
                <!-- 排除hello属性，使其不被序列化 --> 
                <param name="excludeProperties">
                	actionErrors,actionMessages,errorMessages,errors,fieldErrors
                	,callbackurl,locale,texts
                	,session,request,response,application
                </param>
			</result>
		</global-results>
		
		
		<global-exception-mappings>
	    	<exception-mapping result="error" exception="java.lang.Exception,java.sql.SQLException">
	     	</exception-mapping>
	    </global-exception-mappings>
	</package>
	<!-- PC商城 package -->
	<package name="shop" extends="basePackage" namespace="/shop/">
		<interceptors>
			<interceptor name="loginInterceptor" class="com.jshop.common.ShopLoginInterceptor"></interceptor>
			<interceptor-stack name="adminStack">
				<interceptor-ref name="loginInterceptor">
					<param name="excludeMethods">login</param>
				</interceptor-ref>
				<interceptor-ref name="baseStack" />
			</interceptor-stack>
		</interceptors>
		
		<!-- 配置默认拦截器栈 -->
		<default-interceptor-ref name="adminStack"/> 
		
		<global-results>
			<result name="error" type="json">
				<param name="includeProperties">
					success,msg,errorMsg
                </param>
				<param name="ignoreHierarchy">false</param>
			</result>
			<!-- 
			<result name="success">/WEB-INF/pages/admin/success.jsp</result> -->
			<result name="login" type="freemarker">/WEB-INF/pages/pc/login/login.ftl</result>
			<result name="main" type="redirect">/shop/member/home.action</result>
			
			<result name="json" type="json">
				<!-- root参数用于指定要序列化的根对象，如果省去这一配置，表示要序列化action中的所有属性 --> 
                <!-- <param name="root">list</param> --> 
                <!-- ignoreHierarchy 为false时表示要序列化根对象的所有基类 --> 
                <param name="ignoreHierarchy">false</param> 
                <!-- 排除hello属性，使其不被序列化 --> 
                <param name="excludeProperties">
                	actionErrors,actionMessages,errorMessages,errors,fieldErrors
                	,callbackurl,locale,texts
                	,session,request,response,application
                </param>
			</result>
		</global-results>
		
		
		<global-exception-mappings>
	    	<exception-mapping result="error" exception="java.lang.Exception,java.sql.SQLException">
	     	</exception-mapping>
	    </global-exception-mappings>
	</package>
	
	<!-- 手机商城 package -->
	<package name="mobile" extends="basePackage" namespace="/mobile/">
		<interceptors>
			<interceptor name="loginInterceptor" class="com.jshop.common.MobileLoginInterceptor"></interceptor>
			<interceptor-stack name="adminStack">
				<interceptor-ref name="loginInterceptor">
					<param name="excludeMethods">login</param>
				</interceptor-ref>
				<interceptor-ref name="baseStack" />
			</interceptor-stack>
		</interceptors>
		
		<!-- 配置默认拦截器栈 -->
		<default-interceptor-ref name="adminStack"/> 
		
		<global-results>
			<result name="error" type="json">
				<param name="includeProperties">
					success,msg,errorMsg
                </param>
				<param name="ignoreHierarchy">false</param>
			</result>
			<!-- 
			<result name="success">/WEB-INF/pages/admin/success.jsp</result> -->
			<result name="login" type="freemarker">/WEB-INF/pages/mobile/login/login.ftl</result>
			<result name="main" type="redirectAction">../../mobile/member/home.action</result>
			
			<result name="json" type="json">
				<!-- root参数用于指定要序列化的根对象，如果省去这一配置，表示要序列化action中的所有属性 --> 
                <!-- <param name="root">list</param> --> 
                <!-- ignoreHierarchy 为false时表示要序列化根对象的所有基类 --> 
                <param name="ignoreHierarchy">false</param> 
                <!-- 排除hello属性，使其不被序列化 --> 
                <param name="excludeProperties">
                	actionErrors,actionMessages,errorMessages,errors,fieldErrors
                	,callbackurl,locale,texts
                	,session,request,response,application
                </param>
			</result>
		</global-results>
		
		
		<global-exception-mappings>
	    	<exception-mapping result="error" exception="java.lang.Exception,java.sql.SQLException">
	     	</exception-mapping>
	    </global-exception-mappings>
	</package>
</struts>